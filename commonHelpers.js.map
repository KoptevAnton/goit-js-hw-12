{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '44646887-2aa33964a79eef97580c1a22f';\nconst BASE_URL = 'https://pixabay.com/api/';\nconst fetchPhotos = searchImage => {\n  const params = new URLSearchParams({\n    key: API_KEY,\n    q: searchImage,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n    per_page: 21,\n  });\n  return fetch(`${BASE_URL}?${params}`).then(response => {\n    if (!response.ok) {\n      throw new Error(\n        'Sorry, there are no images matching your search query. Please try again!'\n      );\n    }\n    return response.json();\n  });\n};\nexport default fetchPhotos;\n","const createMarkup = images => {\n  return images\n    .map(\n      ({\n        tags,\n        webformatURL,\n        largeImageURL,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `\n          <li class=\"card-container\">\n            <a href=${largeImageURL} class=\"card-container__link js-card-link\">\n              <img loading=\"lazy\" class=\"card-container__photo\" src=\"${webformatURL}\" alt=\"${tags}\" >\n            </a>\n            <div class=\"card-container__thumb\">\n              <div class=\"card-container__meta\">\n                <span class=\"card-container__title\">Likes</span>\n                <span class=\"card-container__info\">${likes}</span>\n              </div>\n              <div class=\"card-container__meta\">\n                <span class=\"card-container__title\">Views</span>\n                <span class=\"card-container__info\">${views}</span>\n              </div>\n              <div class=\"card-container__meta\">\n                <span class=\"card-container__title\">Comments</span>\n                <span class=\"card-container__info\">${comments}</span>\n              </div>\n              <div class=\"card-container__meta\">\n                <span class=\"card-container__title\">Downloads</span>\n                <span class=\"card-container__info\">${downloads}</span>\n              </div>\n            </div>\n          </li>\n        `;\n      }\n    )\n    .join('');\n};\nexport default createMarkup;\n","import './css/styles.scss';\nimport iziToast from 'izitoast';\nimport SimpleLightbox from 'simplelightbox';\nimport fetchPhotos from './js/pixabay-api';\nimport createMarkup from './js/render-functions';\n\nconst galleryEl = document.querySelector('.gallery');\nconst searchFormEl = document.querySelector('.search-form');\nconst loaderEl = document.querySelector('.loader');\n\nfunction onSearch(event) {\n  event.preventDefault();\n  const searchQuery = event.target.elements.searchKeyword.value.trim();\n  galleryEl.innerHTML = '';\n  if (searchQuery === '') {\n    return iziToast.error({\n      message: 'The field in which you enter the text cannot be empty',\n      position: 'center',\n      backgroundColor: 'rgba(239, 64, 64, 1)',\n      messageColor: 'rgba(250, 250, 251, 1)',\n      // iconUrl: './img/octagon.svg', don`t work after deploy\n      messageSize: '16',\n      messageLineHeight: '24',\n    });\n  }\n  galleryEl.innerHTML = '';\n  loaderEl.classList.remove('is-hidden');\n  fetchPhotos(searchQuery)\n    .then(imagesData => {\n      if (imagesData.hits.length === 0) {\n        iziToast.error({\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n          position: 'center',\n          backgroundColor: 'rgba(239, 64, 64, 1)',\n          messageColor: 'rgba(250, 250, 251, 1)',\n          // iconUrl: './img/octagon.svg', don`t work after deploy\n          messageSize: '16',\n          messageLineHeight: '24',\n        });\n      }\n\n      galleryEl.innerHTML = createMarkup(imagesData.hits);\n      const lightbox = new SimpleLightbox('.gallery a', {\n        captionsData: 'alt',\n        captionDelay: 250,\n      });\n      lightbox.refresh();\n    })\n    .catch(error => console.log(error))\n    .finally(() => {\n      event.target.reset();\n      loaderEl.classList.add('is-hidden');\n    });\n}\n\nsearchFormEl.addEventListener('submit', onSearch);\n"],"names":["API_KEY","BASE_URL","fetchPhotos","searchImage","params","response","createMarkup","images","tags","webformatURL","largeImageURL","likes","views","comments","downloads","galleryEl","searchFormEl","loaderEl","onSearch","event","searchQuery","iziToast","imagesData","SimpleLightbox","error"],"mappings":"6vBAAA,MAAMA,EAAU,qCACVC,EAAW,2BACXC,EAAcC,GAAe,CACjC,MAAMC,EAAS,IAAI,gBAAgB,CACjC,IAAKJ,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,OACZ,SAAU,EACd,CAAG,EACD,OAAO,MAAM,GAAGF,CAAQ,IAAIG,CAAM,EAAE,EAAE,KAAKC,GAAY,CACrD,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MACR,0EACR,EAEI,OAAOA,EAAS,MACpB,CAAG,CACH,ECnBMC,EAAeC,GACZA,EACJ,IACC,CAAC,CACC,KAAAC,EACA,aAAAC,EACA,cAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA;AAAA,sBAEOJ,CAAa;AAAA,uEACoCD,CAAY,UAAUD,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,qDAK5CG,CAAK;AAAA;AAAA;AAAA;AAAA,qDAILC,CAAK;AAAA;AAAA;AAAA;AAAA,qDAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,qDAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,SAMzD,EACA,KAAK,EAAE,ECjCNC,EAAY,SAAS,cAAc,UAAU,EAC7CC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAW,SAAS,cAAc,SAAS,EAEjD,SAASC,EAASC,EAAO,CACvBA,EAAM,eAAc,EACpB,MAAMC,EAAcD,EAAM,OAAO,SAAS,cAAc,MAAM,OAE9D,GADAJ,EAAU,UAAY,GAClBK,IAAgB,GAClB,OAAOC,EAAS,MAAM,CACpB,QAAS,wDACT,SAAU,SACV,gBAAiB,uBACjB,aAAc,yBAEd,YAAa,KACb,kBAAmB,IACzB,CAAK,EAEHN,EAAU,UAAY,GACtBE,EAAS,UAAU,OAAO,WAAW,EACrCf,EAAYkB,CAAW,EACpB,KAAKE,GAAc,CACdA,EAAW,KAAK,SAAW,GAC7BD,EAAS,MAAM,CACb,QACE,2EACF,SAAU,SACV,gBAAiB,uBACjB,aAAc,yBAEd,YAAa,KACb,kBAAmB,IAC7B,CAAS,EAGHN,EAAU,UAAYT,EAAagB,EAAW,IAAI,EACjC,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GACtB,CAAO,EACQ,QAAO,CACtB,CAAK,EACA,MAAMC,GAAS,QAAQ,IAAIA,CAAK,CAAC,EACjC,QAAQ,IAAM,CACbL,EAAM,OAAO,QACbF,EAAS,UAAU,IAAI,WAAW,CACxC,CAAK,CACL,CAEAD,EAAa,iBAAiB,SAAUE,CAAQ"}